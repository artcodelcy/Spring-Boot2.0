package test;


import java.util.concurrent.atomic.AtomicInteger;

public class test16 implements Runnable {

	private static Integer count = 1;
	private static AtomicInteger atomicInteger = new AtomicInteger();
	
	public void run(){
		while (true) {
			int count = getCountAtomic();
			System.out.println(count);
			if (count>=50) {
				break;
			}
		}
	}
	
	public synchronized Integer getCount(){
		try {
			Thread.sleep(50);
		} catch (Exception e) {
			

 		}
      return count++;		
		
	}
	
	public Integer getCountAtomic(){
		try {
			Thread.sleep(50);
		} catch (Exception e) {
		
			 
		}
		return atomicInteger.incrementAndGet();
	}
	
  public static void main(String[] args){
	  test16 test16 = new test16();
	  Thread t1 = new Thread(test16);
	  Thread t2 = new Thread(test16);
	 
	  t1.start();
	  t2.start();
	  
  }
	
}
