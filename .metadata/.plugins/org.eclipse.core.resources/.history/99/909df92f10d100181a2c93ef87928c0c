package test;



public class Test13 {

	public interface Data{
		public abstract String getRequest();
	}

	public class RealData implements Data{
		private String result;
		
	   public RealData(String data) {
	    System.out.println("正在使用data"+data+"网络请求数据，耗时操作需要等待");
	    try {
			Thread.sleep(3000);
		} catch (Exception e) {
			// TODO: handle exception
		}
	    System.out.println("操作完毕获取结果");
	    result="lcy结果值";
	}
		@Override
		public String getRequest() {
		
			return result;
		}
		
	}
	public class FutureData implements Data{

		public volatile static boolean ISFLAFG = false;
		private RealData realData;
		
		public synchronized void setRealData(RealData realData) {
			if (ISFLAFG) {
				return;
			}
			this.realData=realData;
			ISFLAFG=true;
			notify();
		}
		
		@Override
		public String getRequest() {
			// TODO Auto-generated method stub
			return null;
		}
			
	}
	
	public class FutureClient{
		public Data request(String queryStr){
			FutureData  futureData = new FutureData();
			new Thread(new Runnable() {
				
				@Override
				public void run() {
					RealData realData = new RealData(queryStr);
					futureData.setRealData(realData);
					
				}
			}).start();
			
			return futureData;
		}
		
	}
	
	
	
		
	}
	

