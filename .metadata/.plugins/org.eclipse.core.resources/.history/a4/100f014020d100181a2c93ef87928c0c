package test;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantReadWriteLock;

public class Cache {

	 static Map<String, Object> map = new HashMap<String, Object>();
	 static ReentrantReadWriteLock rwl =  new ReentrantReadWriteLock();
	 static Lock r = rwl.readLock();
	 static Lock w = rwl.writeLock();
		
	 public static final Object get(String key){
		 r.lock();
		 try {
			System.out.println("正在做读操作，key"+key+"开始");
			Thread.sleep(100);
			Object object = map.get(key);
			System.out.println("正在做读操作，key"+key+"结束");
			System.out.println();
			return object;
		} catch (Exception e) {
			// TODO: handle exception
		} finally {
			r.unlock();
		}
		 return key;
	 }
	 
	 
	 public static final Object put(String key, Object value){
		 
	 }
	 
	
}
